"use strict";var __decorate=this&&this.__decorate||function(t,e,a,l){var o,i=arguments.length,r=3>i?e:null===l?l=Object.getOwnPropertyDescriptor(e,a):l;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(t,e,a,l);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(r=(3>i?o(r):i>3?o(e,a,r):o(e,a))||r);return i>3&&r&&Object.defineProperty(e,a,r),r},__metadata=this&&this.__metadata||function(t,e){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(t,e):void 0},core_1=require("angular2/core"),Parallax=function(){function t(t){var e=this;this.name="parallaxDirective",this.cssKey="backgroundPosition",this.parallaxCss="backgroundPositionY",this.parallaxAxis="Y",this.parallaxRatio=-.7,this.parallaxInitVal=0,this.parallaxIf=!0,this.cssUnit="px",this.cb_context=null,this.cb_args=[],this.parallaxStyles={},this.isSpecialVal=!1,this.evaluateScroll=function(){if(e.parallaxIf){var t=void 0,a=void 0;a=e.scrollElement instanceof Window?e.scrollElement.scrollY*e.parallaxRatio+e.parallaxInitVal:e.scrollElement.scrollTop*e.parallaxRatio+e.parallaxInitVal,void 0!==e.maxValue&&a>=e.maxValue?a=e.maxValue:void 0!==e.minValue&&a<=e.minValue&&(a=e.minValue),t="backgroundPosition"===e.cssKey?"X"===e.parallaxAxis?a+e.cssUnit+" 0":"0 "+a+e.cssUnit:e.isSpecialVal?e.cssValue+"("+a+e.cssUnit+")":a+e.cssUnit,e.cb&&e.cb.apply(e.cb_context,e.cb_args),e.parallaxElement.style[e.cssKey]=t}},this.hostElement=t.nativeElement}return t.prototype.ngOnInit=function(){var t;for(var e in this.config)this[e]=this.config[e];if(this.parallaxCss=this.parallaxCss?this.parallaxCss:"backgroundPositionY",this.parallaxCss.match(/backgroundPosition/i)&&("X"===this.parallaxCss.split("backgroundPosition")[1].toUpperCase()&&(this.parallaxAxis="X"),this.parallaxCss="backgroundPosition"),t=this.parallaxCss.split(":"),this.cssKey=t[0],this.cssValue=t[1],this.isSpecialVal=!!this.cssValue,this.cssValue||(this.cssValue=this.cssKey),this.parallaxRatio=+this.parallaxRatio,this.parallaxInitVal=+this.parallaxInitVal,this.parallaxElement=this.parallaxElement||this.hostElement,!this.scrollElement)if(document.getElementById("parallaxScroll"))this.scrollElement=document.getElementById("parallaxScroll");else if(this.scrollerId)try{if(this.scrollElement=document.getElementById(this.scrollerId),!this.scrollElement)throw"The ID passed through the parallaxConfig ('"+this.scrollerId+"') object was not found in the document.  Defaulting to tracking the scrolling of the window."}catch(a){console.warn(a),this.scrollElement=window}else this.scrollElement=window;this.evaluateScroll(),this.scrollElement.addEventListener("scroll",this.evaluateScroll.bind(this))},__decorate([core_1.Input(),__metadata("design:type",Object)],t.prototype,"config",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],t.prototype,"cssKey",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],t.prototype,"parallaxCss",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],t.prototype,"parallaxAxis",void 0),__decorate([core_1.Input(),__metadata("design:type",Number)],t.prototype,"parallaxRatio",void 0),__decorate([core_1.Input(),__metadata("design:type",Number)],t.prototype,"parallaxInitVal",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],t.prototype,"parallaxIf",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],t.prototype,"scrollerId",void 0),__decorate([core_1.Input(),__metadata("design:type",Number)],t.prototype,"maxValue",void 0),__decorate([core_1.Input(),__metadata("design:type",Number)],t.prototype,"minValue",void 0),__decorate([core_1.Input(),__metadata("design:type",String)],t.prototype,"cssUnit",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],t.prototype,"cb",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],t.prototype,"cb_context",void 0),__decorate([core_1.Input(),__metadata("design:type",Array)],t.prototype,"cb_args",void 0),__decorate([core_1.Input(),__metadata("design:type",Object)],t.prototype,"scrollElement",void 0),__decorate([core_1.Input(),__metadata("design:type",HTMLElement)],t.prototype,"parallaxElement",void 0),t=__decorate([core_1.Directive({selector:"[parallax]"}),__metadata("design:paramtypes",[core_1.ElementRef])],t)}();exports.Parallax=Parallax;